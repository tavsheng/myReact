{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","s","dialog","to","activeClassName","active","name","Message","message","maxlength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElement","dialogsPage","dialogs","map","d","messagesElement","messages","m","isAuth","dialogItems","values","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,2B,oBCA/ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,uICW5CC,EARA,SAACC,GACd,IAAIC,EAAM,YAAaD,EAAME,GAC7B,OACF,yBAAKC,UAAWC,IAAEC,QACR,kBAAC,IAAD,CAASC,GAAKL,EAAMM,gBAAkBH,IAAEI,QAASR,EAAMS,Q,kBCClDC,EALC,SAACV,GACf,OACA,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,yCCgC9BC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACjBC,SAAY,CAACC,IAAUX,GACvBH,KAAK,iBACLe,YAAY,uBAEb,6BACE,6CAOOC,EA9CC,SAACzB,GAEf,IAAI0B,EAAiB1B,EAAM2B,YAAYC,QACpCC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQrB,KAAMqB,EAAErB,KAAMP,GAAI4B,EAAE5B,QAEpC6B,EAAkB/B,EAAM2B,YAAYK,SACrCH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAAST,GAAI+B,EAAE/B,QAM9C,OAAKF,EAAMkC,OAGV,yBAAK/B,UAAWC,IAAEwB,SAChB,yBAAKzB,UAAWC,IAAE+B,aACfT,GAGH,yBAAKvB,UAAWC,IAAE4B,UACfD,GAGH,kBAACjB,EAAD,CAAqBG,SAhBH,SAACmB,GACrBpC,EAAMqC,YAAYD,EAAOE,oBAGA,kBAAC,IAAD,CAAUhC,GAAI,Y,uBCD5BiC,sBACbC,aAboB,SAACC,GACrB,MAAO,CACTd,YAAac,EAAMd,gBAGM,SAACe,GACxB,MAAO,CACLL,YAAa,SAACC,GACZI,EAAUC,YAAyBL,SAMvCM,IAFaL,CAGZd","file":"static/js/4.9edb5ada.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3etT1\",\"dialogItems\":\"Dialogs_dialogItems__2S45N\",\"messages\":\"Dialogs_messages__2lw_P\",\"message\":\"Dialogs_message__2Ipg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1w8Kc\",\"active\":\"Dialog_active__1p2v4\"};","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n  let path= '/dialogs/'+ props.id\r\n  return (\r\n<div className={s.dialog}>\r\n          <NavLink to= {path} activeClassName= {s.active}>{props.name}</NavLink>\r\n        </div>\r\n  );\r\n}\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n  <div className={s.message}>{props.message}</div>\r\n  );\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElement = props.dialogsPage.dialogs\r\n    .map(d => <Dialog name={d.name} id={d.id} />);\r\n\r\n  let messagesElement = props.dialogsPage.messages\r\n    .map(m => <Message message={m.message} id={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n   if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>\r\n        {dialogsElement}\r\n\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElement}\r\n      </div>\r\n\r\n      <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n    </div>\r\n\r\n  );\r\n}\r\nconst maxlength50 = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n       validate = {[required, maxlength50]}\r\n       name='newMessageBody'\r\n       placeholder='Enter your message' />\r\n\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {sendMessageActionCreator} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\ndialogsPage: state.dialogsPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch (sendMessageActionCreator(newMessageBody))\r\n    },\r\n     }\r\n}\r\nexport default compose (\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n) (Dialogs);\r\n"],"sourceRoot":""}